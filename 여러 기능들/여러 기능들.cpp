#include <iostream>
#include <string>
#include <cmath>
#include <tuple>

using namespace std;

int main()
{
    /* 숫자 출력 자릿수 조절 */
    double a = 2, b = 4;

    cout << fixed;           // 소수점을 고정시켜서 출력
    cout.precision(15);      // 15자리까지 출력
    cout << a << endl        // 2.000000000000000
         << b << endl;       // 4.000000000000000
    cout.unsetf(ios::fixed); // 소수점 고정 해제
    cout << a << endl        // 2
         << b << endl;       // 4

    // -------------------------------------------------------------------------------------------------

    /* 형 변환, 형 변환을 통한 아스키코드 출력 */
    // static_cast<new_type>(expression)
    char ch = 'a';
    cout << static_cast<int>(ch) << endl; // ch를 int로 바꾸어 아스키코드 출력

    // -------------------------------------------------------------------------------------------------

    /* 공백있는 문자열 받기 */
    string str;
    getline(cin, str); // getline(cin, str, '\n')이지만 마지막은 생략해도 자동 적용

    // -------------------------------------------------------------------------------------------------

    /* 문자열을 정수형으로, 정수형을 문자열로 */
    int a = 1, int_b;
    char b = '5', char_a;

    char_a = a + '0'; // '1', 정수형 + '0' = 문자열
    int_b = b - '0';  // 5, 문자열 - '0' = 정수형

    // string 헤더 파일 필요
    string b = "5", str_a;
    str_a = to_string(a); // '1', 정수형을 문자열로 변환
    int_b = stoi(b);      // 5, 문자열을 정수형으로 변환

    // -------------------------------------------------------------------------------------------------

    /* 올림, 내림, 반올림 */
    // cmath 헤더를 불러와야 함

    double n1 = 4.7;
    printf("%0.1lf\n", ceil(n1));        // 5.0, 올림
    printf("%0.1lf\n", floor(n1));       // 4.0, 내림
    printf("%0.1lf\n", floor(n1 + 0.5)); // 5.0, 내림에 0.5를 더하여 만든 반올림

    // -------------------------------------------------------------------------------------------------

    /* auto 자료형 */
    // 초깃값의 형식에 맞춰 변수의 형식이 자동으로 결정

    auto d = 5.0;   // 소수가 들어갔으므로 double로 설정
    auto i = 1 + 2; // 정수형끼리의 덧셈이므로 int로 설정

    return 0;

    // -------------------------------------------------------------------------------------------------

    /* Tuple */
    // pair는 두 개의 값이라면 tuple은 세 개의 값을 저장

    tuple<string, string, int> mj;
    mj = make_tuple("Ko Myoung Jun", "1995-10-15", 27);
    cout << get<0>(mj) << '\n' // Ko Myoung Jun
         << get<1>(mj) << '\n' // 1995-10-15
         << get<2>(mj);        // 27
}